services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  mongodb:
    image: mongo:5.0
    command: mongod --quiet
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      timeout: 5s
      retries: 5
    restart: always

  seeder:
    build:
      context: ./seeder
    container_name: seeder
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
    command: [ "python", "seeder.py" ]
    restart: "no"

  fetcher:
    build:
      context: ./fetcher
    container_name: fetcher
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
      - MONGO_URI=mongodb://mongodb:27017/
    volumes:
      - ./fetcher/storage:/app/storage
    restart: on-failure

  parser:
    build:
      context: ./parser
    container_name: parser
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
      - MONGO_URI=mongodb://mongodb:27017/
    restart: on-failure

  filter:
    build:
      context: ./filter
    container_name: filter
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URI=redis://redis:6379/0
    restart: on-failure

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  mongo_data:
  rabbitmq_data:
  redis_data:
